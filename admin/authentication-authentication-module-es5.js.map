{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///src/app/authentication/404/not-found.component.ts","webpack:///src/app/authentication/404/not-found.component.html","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/authentication.routing.ts","webpack:///src/app/authentication/lock/changepassword.component.ts","webpack:///src/app/authentication/lock/changePassword.component.html","webpack:///src/app/authentication/login/login.component.ts","webpack:///src/app/authentication/login/login.component.html","webpack:///src/app/authentication/login2/login2.component.ts","webpack:///src/app/authentication/login2/login2.component.html","webpack:///src/app/authentication/signup/signup.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/authentication/signup2/signup2.component.ts","webpack:///src/app/authentication/signup2/signup2.component.html"],"names":["_c0","_c1","enterDuration","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","providedIn","factory","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","MAT_CHECKBOX_CLICK_ACTION","nextUniqueId","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatCheckbox","multi","MatCheckboxChange","MatCheckboxBase","_elementRef","_MatCheckboxMixinBase","elementRef","_changeDetectorRef","_focusMonitor","_ngZone","tabIndex","_clickAction","_animationMode","_options","ariaLabel","ariaLabelledby","_uniqueId","id","labelPosition","name","change","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","defaultColor","parseInt","monitor","subscribe","focusOrigin","Promise","resolve","then","markForCheck","_syncIndeterminate","stopMonitoring","disableRipple","disabled","detectChanges","value","checked","fn","isDisabled","indeterminate","newState","oldState","element","nativeElement","length","classList","remove","_getAnimationClassForCheckStateTransition","add","animationClass","runOutsideAngular","setTimeout","event","source","emit","stopPropagation","toggle","_transitionCheckState","_emitChangeEvent","_inputElement","origin","options","focusVia","animSuffix","nativeCheckbox","_required","newValue","changed","ɵfac","MatCheckbox_Factory","t","ɵcmp","type","selectors","viewQuery","MatCheckbox_Query","rf","ctx","_t","first","ripple","hostAttrs","hostVars","hostBindings","MatCheckbox_HostBindings","inputs","required","ariaDescribedby","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","$event","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r0","_r2","inputId","textContent","trim","_getAriaChecked","_isRippleDisabled","directives","styles","encapsulation","changeDetection","ctorParameters","String","decorators","args","undefined","propDecorators","selector","host","providers","None","OnPush","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","MatCheckboxRequiredValidator_Factory","ɵMatCheckboxRequiredValidator_BaseFactory","ɵdir","_MatCheckboxRequiredValidatorModule","ɵmod","ɵinj","_MatCheckboxRequiredValidatorModule_Factory","ngJitMode","declarations","exports","MatCheckboxModule","MatCheckboxModule_Factory","imports","NotfoundComponent","templateUrl","AuthenticationModule","forChild","AuthenticationRoutes","path","children","component","changepasswordComponent","route","_rout","formBuilder","Srvc","pass","submitted","changePswdform","group","password","newpassword","confirmpassword","navigate","reset","fire","sessionStorage","removeItem","f","form","oldPassword","newPassword","confirmPassword","cpassword","data","changePassword","res","statusCode","sessionTerminate","message","onPasswordSubmit","redirect","LoginComponent","loginform","recoverform","showRecoverForm","Login2Component","toastr","errorHandling","control","error","Uloginform","controls","hasError","errorHandlingfog","forgotPass","isLoggedIn","email","rememberMe","forgotname","localStorage","getItem","formData","JSON","parse","patchValue","login","setItem","accessToken","stringify","success","timeOut","valid","forgotPassword","loginAdmin","back","styleUrls","SignupComponent","Signup2Component"],"mappings":"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","file":"authentication-authentication-module-es5.js","sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * @breaking-change 10.0.0\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nclass MatCheckboxBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, \n    /**\n     * @deprecated `_clickAction` parameter to be removed, use\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n     * @breaking-change 10.0.0\n     */\n    _clickAction, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._clickAction = _clickAction;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || {};\n        if (this._options.color) {\n            this.color = this.defaultColor = this._options.color;\n        }\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n        this._clickAction = this._clickAction || this._options.clickAction;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Whether the checkbox is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    ngAfterViewChecked() { }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     */\n    get checked() { return this._checked; }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() { return this._indeterminate; }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /** Focuses the checkbox. */\n    focus(origin = 'keyboard', options) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 20, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked())(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(19, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { Component, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html'\r\n})\r\nexport class NotfoundComponent implements AfterViewInit {\r\n  ngAfterViewInit() {}\r\n}\r\n","<div class=\"error-box\">\r\n    <div class=\"error-body text-center\">\r\n        <h1 class=\"error-title text-danger\">404</h1>\r\n        <h3 class=\"text-uppercase error-subtitle\">PAGE NOT FOUND !</h3>\r\n        <p class=\"text-muted m-t-30 m-b-30\">YOU SEEM TO BE TRYING TO FIND HIS WAY HOME</p>\r\n        <a href=\"#/dashboard/classic\" class=\"btn btn-danger btn-rounded waves-effect waves-light m-b-40\">Back to home</a> \r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NotfoundComponent } from './404/not-found.component';\r\nimport { changepasswordComponent } from './lock/changepassword.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login2Component } from './login2/login2.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { Signup2Component } from './signup2/signup2.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\nimport { AuthenticationRoutes } from './authentication.routing';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AuthenticationRoutes),\r\n    NgbModule,\r\n    MatCheckboxModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule\r\n  ],\r\n  declarations: [\r\n    NotfoundComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    changepasswordComponent,\r\n    Login2Component,\r\n    Signup2Component\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { NotfoundComponent } from './404/not-found.component';\r\nimport { changepasswordComponent } from './lock/changepassword.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login2Component } from './login2/login2.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { Signup2Component } from './signup2/signup2.component';\r\n\r\nexport const AuthenticationRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '404',\r\n        component: NotfoundComponent\r\n      },\r\n      {\r\n        path: 'changepassword',\r\n        component: changepasswordComponent\r\n      },\r\n      {\r\n        path: 'login2',\r\n        component: LoginComponent\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: Login2Component\r\n      },\r\n      {\r\n        path: 'signup',\r\n        component: SignupComponent\r\n      },\r\n      {\r\n        path: 'signup2',\r\n        component: Signup2Component\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute, Router, Routes } from \"@angular/router\";\r\nimport { NgForm, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { OnboardingService } from \"src/app/services/onboarding.service\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: \"app-changepassword\",\r\n  templateUrl: \"./changePassword.component.html\",\r\n})\r\nexport class changepasswordComponent {\r\n  changePswdform: FormGroup;\r\n  confirmErrorr: boolean;\r\n  pass: any = {};\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private _rout: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private Srvc: OnboardingService\r\n  ) {\r\n    this.changePswdform = this.formBuilder.group({\r\n      password: [\"\", Validators.required],\r\n      newpassword: [\"\", Validators.required],\r\n      confirmpassword: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  redirect() {\r\n    this.route.navigate([\"/dashboard\"]);\r\n    this.changePswdform.reset();\r\n  }\r\n\r\n  // Logout if Token is invalid\r\n  sessionTerminate() {\r\n    Swal.fire(\"Oops\", \"Session is Terminated\", \"error\");\r\n    sessionStorage.removeItem(\"token\");\r\n    this.route.navigate([\"/login\"]);\r\n  }\r\n\r\n  onPasswordSubmit(f: NgForm) {\r\n    this.submitted = true;\r\n    let form = {\r\n      oldPassword: this.pass.oldPassword,\r\n      newPassword: this.pass.newPassword,\r\n      confirmPassword: this.pass.cpassword,\r\n    };\r\n    if (form.newPassword === form.confirmPassword){\r\n      let data = {\r\n        oldPassword: this.pass.oldPassword,\r\n        newPassword: this.pass.newPassword\r\n      };\r\n      this.Srvc.changePassword(data).subscribe((res: any) => {\r\n        if (res.statusCode == 401) {\r\n          this.sessionTerminate();\r\n        }\r\n        if (res.statusCode == 200) {\r\n          Swal.fire(\"Success\", \"Password changed succesfully\", \"success\");\r\n          this.changePswdform.reset();\r\n          this.route.navigate([\"/dashboard\"]);\r\n        } else {\r\n          Swal.fire(\"Oops\", res.message, \"error\");\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      Swal.fire(\"Oops\", \"New password & confirm password doesn't match\", \"error\");\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\"\r\n  style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\r\n  <div class=\"auth-box\">\r\n    <div>\r\n      <div class=\"logo\">\r\n        <span class=\"db\"><img alt=\"thumbnail\" class=\"\" width=\"100\" src=\"assets/images/full_logo.svg\"></span>\r\n      </div>\r\n      <!-- Form -->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <form class=\"form-horizontal m-t-20\" action=\"index.html\" (ngSubmit)=\"f.valid && onPasswordSubmit(f)\"\r\n            #f=\"ngForm\" novalidate>\r\n            <div class=\"form-group row\">\r\n              <div class=\"col-12\">\r\n                <input class=\"form-control form-control-lg\" minlength=\"6\" maxlength=\"25\" type=\"password\" required\r\n                  [(ngModel)]=\"pass.oldPassword\" required name=\"oldPassword\" #password=\"ngModel\"\r\n                  placeholder=\"Old Password\" />\r\n              </div>\r\n              <!-- Old Password Validation -->\r\n              <mat-error *ngIf=\"f.touched && password.invalid \">\r\n                <div style=\"color:red\" class=\"error d-inline-block pt-1 w-100\" *ngIf=\"password?.errors?.required\">\r\n                  *Current password is required\r\n                </div>\r\n              </mat-error>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <div class=\"col-12\">\r\n                <input name=\"newPassword\" class=\"form-control form-control-lg\" minlength=\"8\" maxlength=\"25\"\r\n                  [(ngModel)]=\"pass.newPassword\" type=\"password\" required placeholder=\"New Password\"\r\n                  #newPassword=\"ngModel\" />\r\n              </div>\r\n              <!-- New Password Validation -->\r\n              <mat-error *ngIf=\"f.touched && newPassword.invalid\">\r\n                <div style=\"color:red\" class=\"error d-inline-block pt-1\" *ngIf=\"newPassword?.errors?.required\">\r\n                  *New password is required!\r\n                </div>\r\n                <div style=\"color:red\" class=\"error\" *ngIf=\"newPassword.errors?.minlength\">\r\n                  *Password should be of atleast 8 characters!\r\n                </div>\r\n              </mat-error>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <div class=\"col-12\">\r\n                <input name=\"confirmPassword\" class=\"form-control form-control-lg\" minlength=\"8\" maxlength=\"25\"\r\n                  [(ngModel)]=\"pass.cpassword\" type=\"password\" required placeholder=\"Confirm Password\"\r\n                  #cpassword=\"ngModel\" />\r\n              </div>\r\n              <!-- Confirm Pass Validation -->\r\n              <mat-error *ngIf=\"f.touched && cpassword.invalid\">\r\n                <div style=\"color:red\" class=\"error  d-inline-block pt-1\" *ngIf=\"cpassword?.errors?.required\">\r\n                  *Confirm password is required!\r\n                </div>\r\n                <div style=\"color:red\" class=\"error\" *ngIf=\"cpassword.errors?.minlength\">\r\n                  *Password should be of atleast 8 characters!\r\n                </div>\r\n              </mat-error>\r\n            </div>\r\n            <div class=\"form-group text-center\">\r\n              <div class=\"col-xs-12 p-b-20\">\r\n                <button class=\"btn theme_btn w-100\" type=\"submit\">Submit</button>\r\n                <a class=\"btn btn-block btn-lg btn-danger mt-2\" (click)='redirect()'>Cancel</a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent {\r\n  constructor() { }\r\n\r\n  loginform = true;\r\n  recoverform = false;\r\n\r\n  showRecoverForm() {\r\n    this.loginform = !this.loginform;\r\n    this.recoverform = !this.recoverform;\r\n  }\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\r\n    <div class=\"auth-box\">\r\n        <div id=\"loginform\" [ngClass]=\"{'d-none': recoverform}\">\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo-icon.svg\" alt=\"logo\" /></span>\r\n                <h5 class=\"font-medium m-b-20\">Sign In to Admin</h5>\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form class=\"form-horizontal m-t-20\" id=\"loginform\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\r\n                            </div>\r\n                            <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\r\n                        </div>\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\r\n                            </div>\r\n                            <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\">\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n                                    <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember me</label>\r\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-dark float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot pwd?</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center\">\r\n                            <div class=\"col-xs-12 p-b-20\">\r\n                                <button class=\"btn btn-block btn-lg btn-info\" type=\"submit\">Log In</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\r\n                                <div class=\"social\">\r\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab fa-facebook\"></i> </a>\r\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab fa-google-plus\"></i> </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group m-b-0 m-t-10\">\r\n                            <div class=\"col-sm-12 text-center\">\r\n                                Don't have an account? <a href=\"#/authentication/signup\" class=\"text-info m-l-5\"><b>Sign Up</b></a>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"recoverform\" [ngClass]=\"{'d-block': recoverform}\">\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo-icon.svg\" alt=\"logo\" /></span>\r\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\r\n                <span>Enter your Email and instructions will be sent to you!</span>\r\n            </div>\r\n            <div class=\"row m-t-20\">\r\n                <!-- Form -->\r\n                <form class=\"col-12\">\r\n                    <!-- email -->\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-12\">\r\n                            <input class=\"form-control form-control-lg\" type=\"email\" required=\"\" placeholder=\"Username\">\r\n                        </div>\r\n                    </div>\r\n                    <!-- pwd -->\r\n                    <div class=\"row m-t-20\">\r\n                        <div class=\"col-12\">\r\n                            <button class=\"btn btn-block btn-lg btn-danger\" type=\"submit\" name=\"action\">Reset</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute, Router, Routes } from \"@angular/router\";\r\nimport { NgForm, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport Swal from \"sweetalert2\";\r\nimport { OnboardingService } from \"src/app/services/onboarding.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login2.component.html\",\r\n  styleUrls: [\"./login2.scss\"],\r\n})\r\nexport class Login2Component {\r\n  Uloginform: FormGroup;\r\n  submitted: boolean = false;\r\n  forgotPass: FormGroup;\r\n  constructor(\r\n    private route: Router,\r\n    private _rout: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private Srvc: OnboardingService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    if (this.Srvc.isLoggedIn()) {\r\n      this.route.navigate([\"/dashboard\"]);\r\n    }\r\n\r\n    this.Uloginform = this.formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", Validators.required],\r\n      rememberMe: [\"\"],\r\n    });\r\n\r\n    this.forgotPass = this.formBuilder.group({\r\n      forgotname: [\"\", [Validators.required, Validators.email]],\r\n    });\r\n\r\n    if (localStorage.getItem(\"remember\")) {\r\n      let formData = JSON.parse(localStorage.getItem(\"remember\"));\r\n      this.Uloginform.patchValue({\r\n        email: formData.email,\r\n        password: formData.password,\r\n        rememberMe: formData.rememberMe,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Login\r\n  loginAdmin() {\r\n    this.submitted = true;\r\n    const data = {\r\n      email: this.Uloginform.controls[\"email\"].value,\r\n      password: this.Uloginform.controls[\"password\"].value,\r\n    };\r\n    this.Srvc.login(data).subscribe((res: any) => {\r\n      if (res.statusCode==200) {\r\n        sessionStorage.setItem(\"token\", res.data.accessToken);\r\n        if (this.Uloginform.value.rememberMe) {\r\n          localStorage.setItem(\r\n            \"remember\",\r\n            JSON.stringify(this.Uloginform.value)\r\n          );\r\n        } else {\r\n          localStorage.removeItem(\"remember\");\r\n        }\r\n        this.route.navigate([\"/dashboard\"]);\r\n        this.toastr.success(\"\", \"Login Successful\", {\r\n          timeOut: 2000,\r\n        });\r\n      }\r\n      else {\r\n        Swal.fire(\"Oops.\", res.message, \"error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  loginform = true;\r\n  recoverform = false;\r\n\r\n  // Back button on Forgot password page\r\n  back() {\r\n    this.forgotPass.reset();\r\n    this.loginform = true;\r\n    this.recoverform = false;\r\n  }\r\n\r\n  showRecoverForm() {\r\n    this.loginform = !this.loginform;\r\n    this.recoverform = !this.recoverform;\r\n  }\r\n\r\n  // Login Form error handling\r\n  public errorHandling = (control: string, error: string) => {\r\n    return this.Uloginform.controls[control].hasError(error);\r\n  };\r\n\r\n  // Forgot Password error handling\r\n  public errorHandlingfog = (control: string, error: string) => {\r\n    return this.forgotPass.controls[control].hasError(error);\r\n  };\r\n\r\n  // Forgot Password\r\n  forgotPassword() {\r\n    this.submitted = true;\r\n    const data = {\r\n      email: this.forgotPass.controls[\"forgotname\"].value,\r\n    };\r\n    if (this.forgotPass.valid) {\r\n      this.Srvc.forgotPassword(data).subscribe((res: any) => {\r\n\r\n        if (res.statusCode == 200) {\r\n\r\n          Swal.fire(\r\n            this.forgotPass.controls[\"forgotname\"].value,\r\n            \"Password reset link sent on email\",\r\n            \"success\"\r\n          );\r\n          this.forgotPass.reset();\r\n          this.loginform = true;\r\n          this.recoverform = false;\r\n        }\r\n        else{\r\n          Swal.fire(\"Oops\", res.message, \"error\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\"\r\n  style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;background-size: cover;\">\r\n  <div class=\"auth-box on-sidebar\">\r\n    <div id=\"loginform\" [ngClass]=\"{'d-none': recoverform}\">\r\n      <div class=\"logo\">\r\n        <span class=\"db\"><img src=\"assets/images/full_logo.svg\" alt=\"logo\" /></span>\r\n        <!-- <h5 class=\"font-medium m-b-20\">Sign In to Admin</h5> -->\r\n      </div>\r\n      <!-- Form -->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <form class=\"form-horizontal m-t-20\" id=\"loginform\" [formGroup]=\"Uloginform\" action=\"index.html\">\r\n            <div class=\"input-group mb-3\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\r\n              </div>\r\n              <input type=\"text\" formControlName=\"email\" class=\"form-control form-control-lg\" placeholder=\"Email\"\r\n                aria-label=\"Username\" aria-describedby=\"basic-addon1\" required>\r\n              <span *ngIf=\"submitted && errorHandling('email','required')\" class=\"error pt-1 text-danger w-100\">\r\n                *Email is required.\r\n              </span>\r\n            </div>\r\n            <div class=\"input-group mb-3\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\r\n              </div>\r\n              <input formControlName=\"password\" type=\"password\" class=\"form-control form-control-lg\"\r\n                placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" required>\r\n              <span *ngIf=\"submitted && errorHandling('password','required')\" class=\"error pt-1 text-danger w-100\">\r\n                *Password is required.\r\n              </span>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"custom-control custom-checkbox\">\r\n                  <input formControlName=\"rememberMe\" type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n                  <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember me</label>\r\n                  <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\"\r\n                    class=\"text-white float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot password</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group text-center\">\r\n              <div class=\"col-xs-12 p-b-20\">\r\n                <button [disabled]=\"!Uloginform.valid\" (click)=\"loginAdmin()\"\r\n                  class=\"btn btn-block btn-lg btn-success text-white\" type=\"submit\">Log In</button>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\r\n                                <div class=\"social\">\r\n                                    <a href=\"javascript:void(0)\" class=\"btn  btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab  fa-facebook\"></i> </a>\r\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab  fa-google-plus\"></i> </a>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n            <!-- <div class=\"form-group m-b-0 m-t-10\">\r\n                            <div class=\"col-sm-12 text-center\">\r\n                                Don't have an account? <a href=\"#/authentication/signup2\" class=\"text-info m-l-5\"><b>Sign Up</b></a>\r\n                            </div>\r\n                        </div> -->\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div id=\"recoverform\" [ngClass]=\"{'d-block': recoverform}\">\r\n      <div class=\"logo\">\r\n        <span class=\"db\"><img src=\"assets/images/full_logo.svg\" alt=\"logo\" /></span>\r\n        <h5 class=\"font-medium m-b-20\">Recover Password</h5>\r\n        <span>Enter your Email and instructions will be sent to you!</span>\r\n      </div>\r\n      <div class=\"row m-t-20\">\r\n        <!-- Form -->\r\n        <form class=\"col-12\" action=\"index.html\" [formGroup]=\"forgotPass\">\r\n          <!-- email -->\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-12\">\r\n              <input formControlName=\"forgotname\" class=\"form-control form-control-lg\" type=\"email\" required=\"\"\r\n                placeholder=\"Email\">\r\n              <span *ngIf=\"submitted && errorHandlingfog('forgotname','required')\" class=\"error pt-1 text-danger w-100\">\r\n                *Email is required.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <!-- pwd -->\r\n          <div class=\"row m-t-20\">\r\n            <div class=\"col-12\">\r\n              <button [disabled]=\"!forgotPass.valid\" (click)=\"forgotPassword()\"\r\n                class=\"btn btn-block btn-lg btn-info text-white\" type=\"submit\" name=\"action\">Reset</button>\r\n              <button class=\"btn btn-block btn-lg btn-danger text-white\" type=\"submit\" name=\"action\"\r\n                href=\"javascript:void(0)\" (click)=\"back()\">Cancel</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html'\r\n})\r\nexport class SignupComponent {\r\n  constructor() {}\r\n\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\r\n    <div class=\"auth-box\">\r\n        <div>\r\n            <div class=\"logo\">\r\n                <!-- <span class=\"db\"><img src=\"assets/images/logo-icon.svg\" alt=\"logo\" /></span> -->\r\n                <h5 class=\"font-medium m-b-20\">Sign Up to Admin</h5>\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\r\n                        <div class=\"form-group row \">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Name\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Confirm Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n                                    <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\">Terms</a></label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center \">\r\n                            <div class=\"col-xs-12 p-b-20 \">\r\n                                <button class=\"btn btn-block btn-lg btn-info \" type=\"submit \">SIGN UP</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group m-b-0 m-t-10 \">\r\n                            <div class=\"col-sm-12 text-center \">\r\n                                Already have an account? <a href=\"#/authentication/login \" class=\"text-info m-l-5 \"><b>Sign In</b></a>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup2.component.html'\r\n})\r\nexport class Signup2Component {\r\n  constructor() {}\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;\">\r\n    <div class=\"auth-box on-sidebar\">\r\n        <div>\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo-icon.svg\" alt=\"logo\" /></span>\r\n                <h5 class=\"font-medium m-b-20\">Sign Up to Admin</h5>\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\r\n                        <div class=\"form-group row \">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Name\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Confirm Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n                                    <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\">Terms</a></label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center \">\r\n                            <div class=\"col-xs-12 p-b-20 \">\r\n                                <button class=\"btn btn-block btn-lg btn-info \" type=\"submit \">SIGN UP</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group m-b-0 m-t-10 \">\r\n                            <div class=\"col-sm-12 text-center \">\r\n                                Already have an account? <a href=\"#/authentication/login2 \" class=\"text-info m-l-5 \"><b>Sign In</b></a>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"]}